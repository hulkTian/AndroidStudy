1.编译 & 执行 C 程序的步骤：
1）打开一个文本编辑器，编写代码。
2）保存文件为 hello.c。
3）打开命令提示符，进入到保存文件所在的目录。
4）键入 gcc hello.c，输入回车，编译代码（默认会生成a.out的执行文件，-o【文件名称】 可以指定输出文件名称）。
5）键入 a.out 来执行程序。

2.数据类型
1）基本类型：
   整数类型（char、unsigned char、short、unsigned short、int、unsigned int、long、unsigned long、long int、long long）
   浮点类型（float、unsigned float、double、unsigned double、long double）
2）枚举类型
3）void类型：指定没有可用的值，用于三种情况。函数没有返回空、函数参数为空、指针指向空。
4）派生类型：包括指针类型、结构体类型、共用体类型和函数类型

3.变量
1）程序可以操作的存储空间的名称就是变量。变量类型决定了存储空间的大小和布局。
2）变量名称可以由字母、数字和下划线字符组成，它必须以字母或下划线开头。
3）变量的声明有两种情况：
   * 一种是需要建立存储空间的。例如：int a 在声明的时候就已经建立了存储空间。
   * 一种是不需要建立存储空间的，通过使用extern关键字声明变量名而不定义它。例如：extern int a 其中变量 a 可以在别的文件中定义的。

4.常量
1）整数常量：
   * 可以是十进制、八进制或十六进制的常量。0x 或 0X 表示十六进制，0 表示八进制，不带前缀则默认表示十进制。
   * 整数常量也可以带一个后缀，后缀是 U 和 L 的组合，U 表示无符号整数（unsigned），L 表示长整数（long）。后缀可以是大写，也可以是小写，U 和 L 的顺序任意。
2）浮点数常量：
   * 浮点常量由整数部分、小数点、小数部分和指数部分组成。
   * 当使用小数形式表示时，必须包含整数部分、小数部分，或同时包含两者。
   * 当使用指数形式表示时，必须包含小数点、指数，或同时包含两者。带符号的指数是用 e 或 E 引入的。例如：6.1E2= 610，61E2=6100。
3）字符常量：字符常量可以是一个普通的字符（例如 'x'）、一个转义序列（例如 '\t'），或一个通用的字符（例如 '\u02C0'）。
4）字符串常量：字符串字面值或常量是括在双引号 " " 中的。
5）定义常量
   在 C 中，有两种简单的定义常量的方式：
   * 使用 #define 预处理器。
   * 使用 const 关键字。

5.存储类
1）auto：所有局部变量默认的存储类，auto 只能用在函数内，即 auto 只能修饰局部变量。
2）static
   * 当 static 修饰局部变量时，可以在函数调用之间保持局部变量的值。
   * 当 static 修饰全局变量时，会使变量的作用域限制在声明它的文件内。
   * TODO 注意，静态变量在程序中只被初始化一次，即使函数被调用多次，该变量的值也不会重置。
3）extern
   * 当使用 extern 关键字时，不会为变量分配任何存储空间，而只是指示编译器该变量在其他文件中定义。
   * extern 修饰符通常用于当有两个或多个文件共享相同的全局变量或函数的时候。
4）register：
   * 定义存储在寄存器中而不是 RAM 中的局部变量。
   * 变量的最大尺寸等于寄存器的大小（通常是一个字），且不能对它应用一元的 '&' 运算符（因为它没有内存位置）。
   * 在需要频繁访问的变量上使用 register 存储类可以提高程序的运行速度。
   * TODO 注意，定义 'register' 并不意味着变量将被存储在寄存器中，它意味着变量可能存储在寄存器中，这取决于硬件和实现的限制。

6.运算符
1）算术运算符：+、-、*、/、%、++、--
2）关系运算符：==、!=、>、<、>=、<=
3）逻辑运算符：&&、||、！
4）位运算符：&（同真为真）、|（有真为真）、^（同假异真）、~（每一位取反）、>>（右移，正数左补0，负数左补1，右边丢弃）、<<（左移，右补0）
5）赋值运算符：=、+=、-=、*=、/=、%=、<<=、>>=、|=、&=、^=
6）杂项运算符：sizeof()（返回变量的大小）、&（返回变量的地址）、*（返回指针变量指向的值）、?:（条件表达式）

7.判断：C语言把任何非零和非空的值假定为 true，把零或 null 假定为 false。
  * if
  * if...else...
  * switch
8.循环
  * 循环类型：while 循环、for 循环、do...while 循环、嵌套循环
  * 循环控制语句：break 语句、continue 语句、goto 语句

9.函数
  * 定义函数：返回类型、函数名称、参数、函数主题
  return_type function_name( parameter list )
  {
     body of the function
  }
  * 函数声明：告诉编译器函数名称及如何调用函数，函数的实际主体可以单独定义。
  return_type function_name( parameter list );
  * 调用函数：调用函数时，传递所需参数，如果函数返回一个值，则可以存储返回值。
  * 函数参数：传值调用（修改函数内的形式参数不会影响实际参数）、引用调用（通过指针传递方式，形参为指向实参地址的指针）。

10.作用域规则

11.数组

12.enum枚举

13.指针

14.函数指针和回调函数

15.字符串

16.结构体

17.共用体

18.位域

19.typedef

20.输入&输出

21.文件读写

22.预处理器

23.头文件

24.强制类型转换

25.错误处理

26.递归

27.可变参数

28.内存管理

29.命令行参数

30.排序算法

31.




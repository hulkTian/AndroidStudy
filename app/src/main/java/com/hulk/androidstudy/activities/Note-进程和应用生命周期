进程和应用生命周期
----------------------------------------------------------------------------------------------------
每个 Android 应用都在各自的 Linux 进程中运行。应用进程的生命周期并不由应用本身直接控制，而是由系统综合多种因
素来确定的，比如系统所知道的正在运行的应用部分、这些内容对用户的重要程度，以及系统中可用的总内存量。
为了确定在内存不足时应该终止哪些进程，Android 会根据每个进程中运行的组件以及这些组件的状态，将它们放入
“重要性层次结构”。这些进程类型包括（按重要性排序）：
1.前台进程
用户目前执行操作所需的进程，条件：
*正在用户的互动屏幕上运行一个Activity。
*有个一BroadcastReceiver目前正在运行，onReceive()方法正在执行。
*有一个Service目前正在执行某个回调方法。
总结：进程所包含的各种组件正在执行中的进程。内存非常低，导致这些进程无法运行时才会终止。
2.可见进程
正在进行用户当前知晓的任务，因此终止该进程会对用户体验造成明显的负面影响。条件：
*进程的Activity对用户可见，但不在前台（onPause()被调用）。
*Service正在通过startForeground()作为前台服务运行。
*系统正在使用其托管的服务实现用户知晓的特定功能。
总结：进程对用户可见但没有获取焦点的进程，只有为了保证前台进程运行而没有其他进程可以回收才会终止。
3.服务流程
包含一个已使用 startService() 方法启动的 Service。会在前台进程和可见进程内存不足时被回收。
4.缓存进程
目前不需要的进程，系统可以根据需要自由的终止该进程。运行良好的系统始终有多个缓存进程可用，并根据需要定期终止
最早的进程，只有在内存严重不足时才会全部终止。

总结：进程的优先级取决于进程中包含的组件的状态，也可能因从属于进程的其他依赖项而提成优先级。